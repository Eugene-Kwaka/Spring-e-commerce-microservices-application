services:
  # Container for postgresqlDB service
  postgres:
    container_name: ecommerce_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data
    # Persistent data storage with the postgres volume
    volumes:
      - ecommerce_pg_sql:/var/lib/postgresql/data
    ports:
      # Exposing container ports "External Port: Container Port"
      - 5433:5432
    # Custom network
    networks:
      - ecommercemicroservices-net
    # If the container is stopped, I want it to automatically restart
    restart: unless-stopped

  # This container is for the pgAdmin interface microservice - For users who do  not have access to the Intellij Ultimate version
  pgadmin:
    container_name: ecommerce_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ecommerce_pgadmin:/var/lib/pgadmin
    ports:
      - 5200:80
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  # Zipkin service container for distributed tracing.
  zipkin:
    container_name: ecommerce_zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  # KAFKA CONFIG USING ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ecommerce_zookeeper
    environment:
      # This config is only required when working with this container in dev mode. When deploying, more configuration is required.
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ecommerce_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      # How many replications do I want
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  # MongoDB service container
  mongodb:
    container_name: ecommerce_mongodb
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ecommerce_mongodb:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=eugene
      - MONGO_INITDB_ROOT_PASSWORD=eugene
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  # MongoExpress service container
  mongo-express:
    container_name: ecommerce_mongo_express
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=eugene
      - ME_CONFIG_MONGODB_ADMINPASSWORD=eugene
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  # mail-dev service container
  mail-dev:
    container_name: ecommerce_mail_dev
    image: maildev/maildev
    ports:
      # Web interface on port 1025
      - 1080:1080
      # SMTP server on port 1025
      - 1025:1025
    networks:
      - ecommercemicroservices-net
    restart: unless-stopped

  keycloak:
    container_name: ecommerce_keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9098:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ecommerce_keycloak:/opt/keycloak/data # Mount the volume to the Keycloak data directory
    networks:
      - ecommercemicroservices-net
    command:
      - "start-dev"
    restart: unless-stopped

# Creates a bridge network named "microservices-net" for container communication
networks:
  ecommercemicroservices-net:
    driver: bridge

# Three persistent volumes are defined:
# postgres: For PostgresSQL data
# pgadmin: For pgAdmin configurations
# mongo: For MongoDB data
volumes:
  # postgres:
  # pgadmin:
  ecommerce_pg_sql:
  ecommerce_pgadmin:
  ecommerce_mongodb:
  ecommerce_keycloak:
